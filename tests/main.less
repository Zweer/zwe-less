// This file is used to test that the less files compile correctly.
// To do so, all the mixins are used here...

@import "../less/zwe";

// colors.less
body {
	color: @black-10;
	color: @black-20;
	color: @black-30;
	color: @black-40;
	color: @black-50;
	color: @black-60;
	color: @black-70;
	color: @black-80;
	color: @black-90;
}

// vendor.less
.test-backface-visibility {
	.backface-visibility(hidden);
}

.test-border-image {
	.border-image(url(border.png) 30 30 round);
}

.test-border-radius {
	.border-radius(25px);
}

.test-border-top-left-radius {
	.border-top-left-radius(2em);
}
.test-border-top-right-radius {
	.border-top-right-radius(2em);
}
.test-border-bottom-right-radius {
	.border-bottom-right-radius(2em);
}
.test-border-bottom-left-radius {
	.border-bottom-left-radius(2em);
}
.test-border-top-radius {
	.border-top-radius(10px);
}
.test-border-right-radius {
	.border-right-radius(10px);
}
.test-border-bottom-radius {
	.border-bottom-radius(10px);
}
.test-border-left-radius {
	.border-left-radius(10px);
}

.test-box-shadow {
	.box-shadow(10px 10px 5px #888);
}
.test-box-shadow {
    .box-shadow(~"0 1px 10px #000, inset 0 -2px 5px red");
}

.test-box-sizing {
	.box-sizing(border-box);
}

.test-opacity {
	.opacity(.5);
}

.test-text-overflow {
	.text-overflow(ellipsis);
}

.test-transform {
	.transform(rotate(7deg));
}
.test-transform3d {
	.transform3d(rotate(7deg));
}
.test-transform-origin {
	.transform-origin(20% 40%);
}
.test-transform-style {
	.transform-style(preserve-3d);
}
.test-matrix {
	#transform > .matrix(0.866, 0.5, -0.5, 0.866, 0, 0);
}
.test-matrix3d {
	#transform > .matrix3d(0.866, 0.5, -0.5, 0.866, 0, 0, 0.6, 0.4, 0.34, 0.76, 0.23, 0.2, 0.6, 0.9, -0.4, -0.3);
}
.test-translate {
	#transform > .translate(10px, 3px);
}
.test-translate3d {
	#transform > .translate3d(10px, 3px, 20px);
}
.test-translateX {
	#transform > .translateX(10px);
}
.test-translateY {
	#transform > .translateY(3px);
}
.test-translateZ {
	#transform > .translateZ(20px);
}
.test-scale-one-argument {
	#transform > .scale(2);
}
.test-scale-two-arguments {
	#transform > .scale(2, 3);
}
.test-scale3d {
	#transform > .scale3d(2, 3, 4);
}
.test-scaleX {
	#transform > .scaleX(2);
}
.test-scaleY {
	#transform > .scaleY(3);
}
.test-scaleZ {
	#transform > .scaleZ(4);
}
.test-rotate {
	#transform > .rotate(45deg);
}
.test-rotate3d {
	#transform > .rotate3d(1, -1, 0, 60deg);
}
.test-rotateX {
	#transform > .rotateX(30deg);
}
.test-rotateY {
	#transform > .rotateY(135deg);
}
.test-rotateZ {
	#transform > .rotateZ(15deg);
}
.test-skew {
	#transform > .skew(45deg, 45deg);
}
.test-skewX {
	#transform > .skewX(60deg);
}
.test-skewY {
	#transform > .skewY(30deg);
}

.test-user-select {
	.user-select(none);
}

// utilities.less
.font-face("Open Sans", opensans, bold, italic);

.test-square {
	.size(10px);
}
.test-rectangle {
	.size(10px, 20px);
}